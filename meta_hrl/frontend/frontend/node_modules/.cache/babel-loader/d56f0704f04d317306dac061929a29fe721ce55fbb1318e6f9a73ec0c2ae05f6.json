{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Grid,Card,CardContent,Typography,Box,FormControl,InputLabel,Select,MenuItem,Switch,FormControlLabel,Paper,Tabs,Tab}from'@mui/material';import{Visibility as VisIcon,ScatterPlot as ScatterIcon,Timeline as TimelineIcon,BubbleChart as BubbleIcon}from'@mui/icons-material';import Plot from'react-plotly.js';import{visualizationAPI}from'../utils/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TabPanel=_ref=>{let{children,value,index}=_ref;return/*#__PURE__*/_jsx(\"div\",{hidden:value!==index,style:{width:'100%',height:'100%'},children:value===index&&/*#__PURE__*/_jsx(Box,{sx:{p:0},children:children})});};const Visualization=()=>{const[skillEmbeddings,setSkillEmbeddings]=useState(null);const[selectedMethod,setSelectedMethod]=useState('pca');const[show3D,setShow3D]=useState(false);const[activeTab,setActiveTab]=useState(0);const[loading,setLoading]=useState(true);useEffect(()=>{fetchVisualizationData();},[]);const fetchVisualizationData=async()=>{try{const embeddingsResponse=await visualizationAPI.getSkillEmbeddings();setSkillEmbeddings(embeddingsResponse.data);}catch(error){console.error('Error fetching visualization data:',error);}finally{setLoading(false);}};const handleTabChange=(event,newValue)=>{setActiveTab(newValue);};const renderSkillEmbeddingsPlot=()=>{var _skillEmbeddings$pca_,_skillEmbeddings$pca_2;if(!skillEmbeddings||skillEmbeddings.labels.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:400,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No embedding data available\"})});}const embeddings=selectedMethod==='pca'?skillEmbeddings.embeddings_2d_pca:skillEmbeddings.embeddings_2d_tsne;if(!embeddings){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:400,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:selectedMethod==='tsne'?'t-SNE data not available (need &gt;3 skills)':'No PCA data available'})});}const trace={x:embeddings.map(point=>point[0]),y:embeddings.map(point=>point[1]),mode:'markers+text',type:'scatter',text:skillEmbeddings.labels,textposition:'top center',marker:{size:12,color:skillEmbeddings.labels.map((_,i)=>i),colorscale:'Viridis',showscale:true,colorbar:{title:'Skill Index',titleside:'right'}},hovertemplate:skillEmbeddings.labels.map(label=>`<b>${label}</b><br>Click to view details<extra></extra>`),name:'Skills'};const layout={title:`Skill Embeddings (${selectedMethod.toUpperCase()})`,xaxis:{title:selectedMethod==='pca'?`PC1 (${(((_skillEmbeddings$pca_=skillEmbeddings.pca_explained_variance)===null||_skillEmbeddings$pca_===void 0?void 0:_skillEmbeddings$pca_[0])*100||0).toFixed(1)}% variance)`:'t-SNE Dimension 1',color:'#ffffff',gridcolor:'#444'},yaxis:{title:selectedMethod==='pca'?`PC2 (${(((_skillEmbeddings$pca_2=skillEmbeddings.pca_explained_variance)===null||_skillEmbeddings$pca_2===void 0?void 0:_skillEmbeddings$pca_2[1])*100||0).toFixed(1)}% variance)`:'t-SNE Dimension 2',color:'#ffffff',gridcolor:'#444'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:80,b:50,l:80},showlegend:false};return/*#__PURE__*/_jsx(Plot,{data:[trace],layout:layout,style:{width:'100%',height:'500px'},config:{displayModeBar:true,responsive:true}});};const renderClusterAnalysisPlot=()=>{if(!skillEmbeddings||skillEmbeddings.labels.length<3){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:400,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"Need at least 3 skills for cluster analysis\"})});}// Simulate clustering results (in practice, this would use real clustering)\nconst numClusters=Math.min(3,Math.ceil(skillEmbeddings.labels.length/2));const clusters=skillEmbeddings.labels.map((_,i)=>i%numClusters);const embeddings=skillEmbeddings.embeddings_2d_pca;const colors=['#1f77b4','#ff7f0e','#2ca02c','#d62728','#9467bd'];const traces=[];for(let cluster=0;cluster<numClusters;cluster++){const clusterIndices=clusters.map((c,i)=>c===cluster?i:-1).filter(i=>i!==-1);traces.push({x:clusterIndices.map(i=>embeddings[i][0]),y:clusterIndices.map(i=>embeddings[i][1]),mode:'markers+text',type:'scatter',text:clusterIndices.map(i=>skillEmbeddings.labels[i]),textposition:'top center',marker:{size:12,color:colors[cluster]},name:`Cluster ${cluster+1}`,hovertemplate:clusterIndices.map(i=>`<b>${skillEmbeddings.labels[i]}</b><br>Cluster: ${cluster+1}<extra></extra>`)});}const layout={title:'Skill Clustering Analysis',xaxis:{title:'PC1',color:'#ffffff',gridcolor:'#444'},yaxis:{title:'PC2',color:'#ffffff',gridcolor:'#444'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:60},legend:{x:1,y:1}};return/*#__PURE__*/_jsx(Plot,{data:traces,layout:layout,style:{width:'100%',height:'500px'},config:{displayModeBar:true,responsive:true}});};const renderVarianceExplainedPlot=()=>{if(!(skillEmbeddings!==null&&skillEmbeddings!==void 0&&skillEmbeddings.pca_explained_variance)){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:300,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No PCA variance data available\"})});}// Show first 10 components\nconst variance=skillEmbeddings.pca_explained_variance.slice(0,10);const trace={x:variance.map((_,i)=>`PC${i+1}`),y:variance.map(v=>v*100),type:'bar',marker:{color:'#1976d2'},text:variance.map(v=>`${(v*100).toFixed(1)}%`),textposition:'auto'};const layout={title:'PCA Explained Variance',xaxis:{title:'Principal Components',color:'#ffffff'},yaxis:{title:'Explained Variance (%)',color:'#ffffff'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:60},showlegend:false};return/*#__PURE__*/_jsx(Plot,{data:[trace],layout:layout,style:{width:'100%',height:'300px'},config:{displayModeBar:false,responsive:true}});};const renderDimensionalityReductionComparison=()=>{if(!skillEmbeddings||!skillEmbeddings.embeddings_2d_tsne){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:400,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"t-SNE comparison not available (need >3 skills)\"})});}const pcaTrace={x:skillEmbeddings.embeddings_2d_pca.map(point=>point[0]),y:skillEmbeddings.embeddings_2d_pca.map(point=>point[1]),mode:'markers+text',type:'scatter',text:skillEmbeddings.labels,textposition:'top center',marker:{size:10,color:'#1976d2'},name:'PCA',xaxis:'x',yaxis:'y'};const tsneTrace={x:skillEmbeddings.embeddings_2d_tsne.map(point=>point[0]),y:skillEmbeddings.embeddings_2d_tsne.map(point=>point[1]),mode:'markers+text',type:'scatter',text:skillEmbeddings.labels,textposition:'top center',marker:{size:10,color:'#dc004e'},name:'t-SNE',xaxis:'x2',yaxis:'y2'};const layout={title:'PCA vs t-SNE Comparison',grid:{rows:1,columns:2,pattern:'independent'},xaxis:{title:'PCA Dim 1',color:'#ffffff',domain:[0,0.45]},yaxis:{title:'PCA Dim 2',color:'#ffffff'},xaxis2:{title:'t-SNE Dim 1',color:'#ffffff',domain:[0.55,1]},yaxis2:{title:'t-SNE Dim 2',color:'#ffffff',anchor:'x2'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:60},legend:{x:0.5,y:1,xanchor:'center'}};return/*#__PURE__*/_jsx(Plot,{data:[pcaTrace,tsneTrace],layout:layout,style:{width:'100%',height:'500px'},config:{displayModeBar:true,responsive:true}});};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"50vh\",children:/*#__PURE__*/_jsx(Typography,{children:\"Loading visualization data...\"})});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Advanced Visualizations\"}),/*#__PURE__*/_jsx(Paper,{sx:{p:2,mb:3},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,size:\"small\",children:[/*#__PURE__*/_jsx(InputLabel,{children:\"Reduction Method\"}),/*#__PURE__*/_jsxs(Select,{value:selectedMethod,label:\"Reduction Method\",onChange:e=>setSelectedMethod(e.target.value),children:[/*#__PURE__*/_jsx(MenuItem,{value:\"pca\",children:\"PCA\"}),/*#__PURE__*/_jsx(MenuItem,{value:\"tsne\",children:\"t-SNE\"})]})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:show3D,onChange:e=>setShow3D(e.target.checked)}),label:\"3D View (Coming Soon)\",disabled:true})})]})}),/*#__PURE__*/_jsxs(Paper,{sx:{width:'100%'},children:[/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,variant:\"scrollable\",scrollButtons:\"auto\",children:[/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(ScatterIcon,{}),label:\"Skill Embeddings\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(BubbleIcon,{}),label:\"Clustering\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(TimelineIcon,{}),label:\"Variance Analysis\"}),/*#__PURE__*/_jsx(Tab,{icon:/*#__PURE__*/_jsx(VisIcon,{}),label:\"Method Comparison\"})]}),/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:0,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Skill Embedding Visualization\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[(skillEmbeddings===null||skillEmbeddings===void 0?void 0:skillEmbeddings.labels.length)||0,\" skills \\u2022 \",selectedMethod.toUpperCase(),\" reduction\"]})]}),renderSkillEmbeddingsPlot()]})})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:1,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Skill Clustering Analysis\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"Skills are automatically clustered based on their embeddings to identify similar functionalities and potential skill hierarchies.\"}),renderClusterAnalysisPlot()]})})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:2,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"PCA Explained Variance\"}),renderVarianceExplainedPlot()]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Dimensionality Insights\"}),(skillEmbeddings===null||skillEmbeddings===void 0?void 0:skillEmbeddings.pca_explained_variance)&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",paragraph:true,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Total Variance Explained (First 2 Components):\"}),\" \",' ',((skillEmbeddings.pca_explained_variance[0]+skillEmbeddings.pca_explained_variance[1])*100).toFixed(1),\"%\"]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",paragraph:true,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Intrinsic Dimensionality:\"}),\" \",' ',skillEmbeddings.pca_explained_variance.findIndex(v=>v<0.05)||skillEmbeddings.pca_explained_variance.length]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Higher explained variance in fewer components suggests that skills have clear structural relationships and can be effectively organized in lower-dimensional spaces.\"})]})]})})})]})}),/*#__PURE__*/_jsx(TabPanel,{value:activeTab,index:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"PCA vs t-SNE Comparison\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:\"PCA preserves global structure and variance, while t-SNE emphasizes local neighborhoods and can reveal non-linear clusters.\"}),renderDimensionalityReductionComparison()]})})})]})]})]});};export default Visualization;","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","FormControl","InputLabel","Select","MenuItem","Switch","FormControlLabel","Paper","Tabs","Tab","Visibility","VisIcon","ScatterPlot","ScatterIcon","Timeline","TimelineIcon","BubbleChart","BubbleIcon","Plot","visualizationAPI","jsx","_jsx","jsxs","_jsxs","TabPanel","_ref","children","value","index","hidden","style","width","height","sx","p","Visualization","skillEmbeddings","setSkillEmbeddings","selectedMethod","setSelectedMethod","show3D","setShow3D","activeTab","setActiveTab","loading","setLoading","fetchVisualizationData","embeddingsResponse","getSkillEmbeddings","data","error","console","handleTabChange","event","newValue","renderSkillEmbeddingsPlot","_skillEmbeddings$pca_","_skillEmbeddings$pca_2","labels","length","display","justifyContent","alignItems","color","embeddings","embeddings_2d_pca","embeddings_2d_tsne","trace","x","map","point","y","mode","type","text","textposition","marker","size","_","i","colorscale","showscale","colorbar","title","titleside","hovertemplate","label","name","layout","toUpperCase","xaxis","pca_explained_variance","toFixed","gridcolor","yaxis","paper_bgcolor","plot_bgcolor","font","margin","t","r","b","l","showlegend","config","displayModeBar","responsive","renderClusterAnalysisPlot","numClusters","Math","min","ceil","clusters","colors","traces","cluster","clusterIndices","c","filter","push","legend","renderVarianceExplainedPlot","variance","slice","v","renderDimensionalityReductionComparison","pcaTrace","tsneTrace","grid","rows","columns","pattern","domain","xaxis2","yaxis2","anchor","xanchor","variant","component","gutterBottom","mb","container","spacing","item","xs","sm","fullWidth","onChange","e","target","control","checked","disabled","scrollButtons","icon","paragraph","lg","findIndex"],"sources":["/Users/ananthhariharan/Documents/Projects/Trevi/meta_hrl/frontend/frontend/src/pages/Visualization.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Paper,\n  Tabs,\n  Tab,\n} from '@mui/material';\nimport {\n  Visibility as VisIcon,\n  ScatterPlot as ScatterIcon,\n  Timeline as TimelineIcon,\n  BubbleChart as BubbleIcon,\n} from '@mui/icons-material';\nimport Plot from 'react-plotly.js';\nimport { visualizationAPI } from '../utils/api';\n\ninterface SkillEmbeddings {\n  embeddings_raw: number[][];\n  embeddings_2d_pca: number[][];\n  embeddings_2d_tsne: number[][] | null;\n  labels: string[];\n  pca_explained_variance: number[];\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: React.FC<TabPanelProps> = ({ children, value, index }) => (\n  <div hidden={value !== index} style={{ width: '100%', height: '100%' }}>\n    {value === index && <Box sx={{ p: 0 }}>{children}</Box>}\n  </div>\n);\n\nconst Visualization: React.FC = () => {\n  const [skillEmbeddings, setSkillEmbeddings] = useState<SkillEmbeddings | null>(null);\n  const [selectedMethod, setSelectedMethod] = useState<'pca' | 'tsne'>('pca');\n  const [show3D, setShow3D] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchVisualizationData();\n  }, []);\n\n  const fetchVisualizationData = async () => {\n    try {\n      const embeddingsResponse = await visualizationAPI.getSkillEmbeddings();\n      setSkillEmbeddings(embeddingsResponse.data);\n    } catch (error) {\n      console.error('Error fetching visualization data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  const renderSkillEmbeddingsPlot = () => {\n    if (!skillEmbeddings || skillEmbeddings.labels.length === 0) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={400}>\n          <Typography color=\"text.secondary\">No embedding data available</Typography>\n        </Box>\n      );\n    }\n\n    const embeddings = selectedMethod === 'pca' ? \n      skillEmbeddings.embeddings_2d_pca : \n      skillEmbeddings.embeddings_2d_tsne;\n\n    if (!embeddings) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={400}>\n          <Typography color=\"text.secondary\">\n            {selectedMethod === 'tsne' ? 't-SNE data not available (need &gt;3 skills)' : 'No PCA data available'}\n          </Typography>\n        </Box>\n      );\n    }\n\n    const trace = {\n      x: embeddings.map(point => point[0]),\n      y: embeddings.map(point => point[1]),\n      mode: 'markers+text',\n      type: 'scatter',\n      text: skillEmbeddings.labels,\n      textposition: 'top center',\n      marker: {\n        size: 12,\n        color: skillEmbeddings.labels.map((_, i) => i),\n        colorscale: 'Viridis',\n        showscale: true,\n        colorbar: {\n          title: 'Skill Index',\n          titleside: 'right'\n        }\n      },\n      hovertemplate: skillEmbeddings.labels.map(label => \n        `<b>${label}</b><br>Click to view details<extra></extra>`\n      ),\n      name: 'Skills'\n    };\n\n    const layout = {\n      title: `Skill Embeddings (${selectedMethod.toUpperCase()})`,\n      xaxis: { \n        title: selectedMethod === 'pca' ? \n          `PC1 (${(skillEmbeddings.pca_explained_variance?.[0] * 100 || 0).toFixed(1)}% variance)` :\n          't-SNE Dimension 1',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: selectedMethod === 'pca' ? \n          `PC2 (${(skillEmbeddings.pca_explained_variance?.[1] * 100 || 0).toFixed(1)}% variance)` :\n          't-SNE Dimension 2',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 80, b: 50, l: 80 },\n      showlegend: false,\n    };\n\n    return (\n      <Plot\n        data={[trace]}\n        layout={layout}\n        style={{ width: '100%', height: '500px' }}\n        config={{ displayModeBar: true, responsive: true }}\n      />\n    );\n  };\n\n  const renderClusterAnalysisPlot = () => {\n    if (!skillEmbeddings || skillEmbeddings.labels.length < 3) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={400}>\n          <Typography color=\"text.secondary\">\n            Need at least 3 skills for cluster analysis\n          </Typography>\n        </Box>\n      );\n    }\n\n    // Simulate clustering results (in practice, this would use real clustering)\n    const numClusters = Math.min(3, Math.ceil(skillEmbeddings.labels.length / 2));\n    const clusters = skillEmbeddings.labels.map((_, i) => i % numClusters);\n    \n    const embeddings = skillEmbeddings.embeddings_2d_pca;\n    const colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd'];\n\n    const traces = [];\n    for (let cluster = 0; cluster < numClusters; cluster++) {\n      const clusterIndices = clusters.map((c, i) => c === cluster ? i : -1).filter(i => i !== -1);\n      \n      traces.push({\n        x: clusterIndices.map(i => embeddings[i][0]),\n        y: clusterIndices.map(i => embeddings[i][1]),\n        mode: 'markers+text',\n        type: 'scatter',\n        text: clusterIndices.map(i => skillEmbeddings.labels[i]),\n        textposition: 'top center',\n        marker: {\n          size: 12,\n          color: colors[cluster],\n        },\n        name: `Cluster ${cluster + 1}`,\n        hovertemplate: clusterIndices.map(i => \n          `<b>${skillEmbeddings.labels[i]}</b><br>Cluster: ${cluster + 1}<extra></extra>`\n        ),\n      });\n    }\n\n    const layout = {\n      title: 'Skill Clustering Analysis',\n      xaxis: { \n        title: 'PC1',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: 'PC2',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 60 },\n      legend: { x: 1, y: 1 },\n    };\n\n    return (\n      <Plot\n        data={traces}\n        layout={layout}\n        style={{ width: '100%', height: '500px' }}\n        config={{ displayModeBar: true, responsive: true }}\n      />\n    );\n  };\n\n  const renderVarianceExplainedPlot = () => {\n    if (!skillEmbeddings?.pca_explained_variance) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={300}>\n          <Typography color=\"text.secondary\">No PCA variance data available</Typography>\n        </Box>\n      );\n    }\n\n    // Show first 10 components\n    const variance = skillEmbeddings.pca_explained_variance.slice(0, 10);\n    \n    const trace = {\n      x: variance.map((_, i) => `PC${i + 1}`),\n      y: variance.map(v => v * 100),\n      type: 'bar',\n      marker: { color: '#1976d2' },\n      text: variance.map(v => `${(v * 100).toFixed(1)}%`),\n      textposition: 'auto',\n    };\n\n    const layout = {\n      title: 'PCA Explained Variance',\n      xaxis: { \n        title: 'Principal Components',\n        color: '#ffffff'\n      },\n      yaxis: { \n        title: 'Explained Variance (%)',\n        color: '#ffffff'\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 60 },\n      showlegend: false,\n    };\n\n    return (\n      <Plot\n        data={[trace]}\n        layout={layout}\n        style={{ width: '100%', height: '300px' }}\n        config={{ displayModeBar: false, responsive: true }}\n      />\n    );\n  };\n\n  const renderDimensionalityReductionComparison = () => {\n    if (!skillEmbeddings || !skillEmbeddings.embeddings_2d_tsne) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={400}>\n          <Typography color=\"text.secondary\">\n            t-SNE comparison not available (need &gt;3 skills)\n          </Typography>\n        </Box>\n      );\n    }\n\n    const pcaTrace = {\n      x: skillEmbeddings.embeddings_2d_pca.map(point => point[0]),\n      y: skillEmbeddings.embeddings_2d_pca.map(point => point[1]),\n      mode: 'markers+text',\n      type: 'scatter',\n      text: skillEmbeddings.labels,\n      textposition: 'top center',\n      marker: { size: 10, color: '#1976d2' },\n      name: 'PCA',\n      xaxis: 'x',\n      yaxis: 'y',\n    };\n\n    const tsneTrace = {\n      x: skillEmbeddings.embeddings_2d_tsne.map(point => point[0]),\n      y: skillEmbeddings.embeddings_2d_tsne.map(point => point[1]),\n      mode: 'markers+text',\n      type: 'scatter',\n      text: skillEmbeddings.labels,\n      textposition: 'top center',\n      marker: { size: 10, color: '#dc004e' },\n      name: 't-SNE',\n      xaxis: 'x2',\n      yaxis: 'y2',\n    };\n\n    const layout = {\n      title: 'PCA vs t-SNE Comparison',\n      grid: { rows: 1, columns: 2, pattern: 'independent' },\n      xaxis: { title: 'PCA Dim 1', color: '#ffffff', domain: [0, 0.45] },\n      yaxis: { title: 'PCA Dim 2', color: '#ffffff' },\n      xaxis2: { title: 't-SNE Dim 1', color: '#ffffff', domain: [0.55, 1] },\n      yaxis2: { title: 't-SNE Dim 2', color: '#ffffff', anchor: 'x2' },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 60 },\n      legend: { x: 0.5, y: 1, xanchor: 'center' },\n    };\n\n    return (\n      <Plot\n        data={[pcaTrace, tsneTrace]}\n        layout={layout}\n        style={{ width: '100%', height: '500px' }}\n        config={{ displayModeBar: true, responsive: true }}\n      />\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"50vh\">\n        <Typography>Loading visualization data...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Advanced Visualizations\n      </Typography>\n\n      {/* Controls */}\n      <Paper sx={{ p: 2, mb: 3 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid item xs={12} sm={4}>\n            <FormControl fullWidth size=\"small\">\n              <InputLabel>Reduction Method</InputLabel>\n              <Select\n                value={selectedMethod}\n                label=\"Reduction Method\"\n                onChange={(e) => setSelectedMethod(e.target.value as 'pca' | 'tsne')}\n              >\n                <MenuItem value=\"pca\">PCA</MenuItem>\n                <MenuItem value=\"tsne\">t-SNE</MenuItem>\n              </Select>\n            </FormControl>\n          </Grid>\n          \n          <Grid item xs={12} sm={4}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={show3D}\n                  onChange={(e) => setShow3D(e.target.checked)}\n                />\n              }\n              label=\"3D View (Coming Soon)\"\n              disabled\n            />\n          </Grid>\n        </Grid>\n      </Paper>\n\n      {/* Visualization Tabs */}\n      <Paper sx={{ width: '100%' }}>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          <Tab icon={<ScatterIcon />} label=\"Skill Embeddings\" />\n          <Tab icon={<BubbleIcon />} label=\"Clustering\" />\n          <Tab icon={<TimelineIcon />} label=\"Variance Analysis\" />\n          <Tab icon={<VisIcon />} label=\"Method Comparison\" />\n        </Tabs>\n\n        <Box sx={{ p: 3 }}>\n          <TabPanel value={activeTab} index={0}>\n            <Card>\n              <CardContent>\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n                  <Typography variant=\"h6\">\n                    Skill Embedding Visualization\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {skillEmbeddings?.labels.length || 0} skills • {selectedMethod.toUpperCase()} reduction\n                  </Typography>\n                </Box>\n                {renderSkillEmbeddingsPlot()}\n              </CardContent>\n            </Card>\n          </TabPanel>\n\n          <TabPanel value={activeTab} index={1}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Skill Clustering Analysis\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                  Skills are automatically clustered based on their embeddings to identify \n                  similar functionalities and potential skill hierarchies.\n                </Typography>\n                {renderClusterAnalysisPlot()}\n              </CardContent>\n            </Card>\n          </TabPanel>\n\n          <TabPanel value={activeTab} index={2}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} lg={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      PCA Explained Variance\n                    </Typography>\n                    {renderVarianceExplainedPlot()}\n                  </CardContent>\n                </Card>\n              </Grid>\n              \n              <Grid item xs={12} lg={6}>\n                <Card>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Dimensionality Insights\n                    </Typography>\n                    \n                    {skillEmbeddings?.pca_explained_variance && (\n                      <Box>\n                        <Typography variant=\"body2\" paragraph>\n                          <strong>Total Variance Explained (First 2 Components):</strong> {' '}\n                          {((skillEmbeddings.pca_explained_variance[0] + skillEmbeddings.pca_explained_variance[1]) * 100).toFixed(1)}%\n                        </Typography>\n                        \n                        <Typography variant=\"body2\" paragraph>\n                          <strong>Intrinsic Dimensionality:</strong> {' '}\n                          {skillEmbeddings.pca_explained_variance.findIndex(v => v < 0.05) || skillEmbeddings.pca_explained_variance.length}\n                        </Typography>\n                        \n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          Higher explained variance in fewer components suggests that skills \n                          have clear structural relationships and can be effectively organized \n                          in lower-dimensional spaces.\n                        </Typography>\n                      </Box>\n                    )}\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </TabPanel>\n\n          <TabPanel value={activeTab} index={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  PCA vs t-SNE Comparison\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                  PCA preserves global structure and variance, while t-SNE emphasizes \n                  local neighborhoods and can reveal non-linear clusters.\n                </Typography>\n                {renderDimensionalityReductionComparison()}\n              </CardContent>\n            </Card>\n          </TabPanel>\n        </Box>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default Visualization;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}