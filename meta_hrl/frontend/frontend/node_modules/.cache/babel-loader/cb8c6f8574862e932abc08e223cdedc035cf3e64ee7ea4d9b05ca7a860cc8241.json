{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Grid,Card,CardContent,Typography,Box,Chip,Button,Paper,Table,TableBody,TableCell,TableContainer,TableHead,TableRow}from'@mui/material';import{TrendingUp as TrendingUpIcon,PlayArrow as PlayIcon,Stop as StopIcon,Refresh as RefreshIcon}from'@mui/icons-material';import Plot from'react-plotly.js';import{trainingAPI}from'../utils/api';import{useWebSocket}from'../utils/websocket';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Training=()=>{const[metrics,setMetrics]=useState({});const[isTraining,setIsTraining]=useState(false);const[loading,setLoading]=useState(true);const[lastUpdate,setLastUpdate]=useState(null);const{lastMessage,isConnected}=useWebSocket();useEffect(()=>{fetchMetrics();},[]);useEffect(()=>{if(lastMessage){const message=JSON.parse(lastMessage);if(message.type==='metrics_updated'){const newMetrics=message.data.metrics;setMetrics(prevMetrics=>{const updated={...prevMetrics};// Update each metric array\nObject.keys(newMetrics).forEach(key=>{const typedKey=key;if(!updated[typedKey]){updated[typedKey]=[];}updated[typedKey].push(newMetrics[key]);// Keep only last 1000 points\nif(updated[typedKey].length>1000){updated[typedKey]=updated[typedKey].slice(-1000);}});return updated;});setLastUpdate(new Date());setIsTraining(true);}}},[lastMessage]);const fetchMetrics=async()=>{try{const response=await trainingAPI.getMetrics();setMetrics(response.data.metrics);setLastUpdate(new Date(response.data.timestamp));}catch(error){console.error('Error fetching training metrics:',error);}finally{setLoading(false);}};const handleStartTraining=()=>{// In a real implementation, this would start a training job\nsetIsTraining(true);};const handleStopTraining=()=>{// In a real implementation, this would stop the training job\nsetIsTraining(false);};const renderMetricCard=function(title,value,trend){let color=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'primary';return/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",justifyContent:\"space-between\",children:[/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",gutterBottom:true,variant:\"overline\",children:title}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"div\",sx:{color:`${color}.main`},children:value}),trend&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:trend})]}),/*#__PURE__*/_jsx(TrendingUpIcon,{sx:{color:`${color}.main`,opacity:0.7}})]})})});};const renderLossPlot=()=>{if(!metrics.meta_loss||metrics.meta_loss.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:300,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No loss data available\"})});}const traces=[];if(metrics.meta_loss){traces.push({x:metrics.meta_loss.map((_,index)=>index),y:metrics.meta_loss,type:'scatter',mode:'lines',name:'Meta Loss',line:{color:'#1976d2',width:2}});}if(metrics.adaptation_loss){traces.push({x:metrics.adaptation_loss.map((_,index)=>index),y:metrics.adaptation_loss,type:'scatter',mode:'lines',name:'Adaptation Loss',line:{color:'#dc004e',width:2},yaxis:'y2'});}const layout={title:'Training Loss Curves',xaxis:{title:'Iteration',color:'#ffffff',gridcolor:'#444'},yaxis:{title:'Meta Loss',color:'#ffffff',gridcolor:'#444',type:'log'},yaxis2:{title:'Adaptation Loss',overlaying:'y',side:'right',color:'#ffffff'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:60,b:50,l:60},legend:{x:0,y:1}};return/*#__PURE__*/_jsx(Plot,{data:traces,layout:layout,style:{width:'100%',height:'350px'},config:{displayModeBar:false,responsive:true}});};const renderSuccessRatePlot=()=>{if(!metrics.success_rate||metrics.success_rate.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:300,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No success rate data available\"})});}const trace={x:metrics.success_rate.map((_,index)=>index),y:metrics.success_rate.map(rate=>rate*100),type:'scatter',mode:'lines+markers',name:'Success Rate',line:{color:'#2e7d32',width:3},marker:{size:4},fill:'tonexty',fillcolor:'rgba(46, 125, 50, 0.1)'};const layout={title:'Success Rate Evolution',xaxis:{title:'Iteration',color:'#ffffff',gridcolor:'#444'},yaxis:{title:'Success Rate (%)',color:'#ffffff',gridcolor:'#444',range:[0,100]},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:60},showlegend:false};return/*#__PURE__*/_jsx(Plot,{data:[trace],layout:layout,style:{width:'100%',height:'300px'},config:{displayModeBar:false,responsive:true}});};const renderDiversityPlot=()=>{if(!metrics.diversity_score||metrics.diversity_score.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:300,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No diversity data available\"})});}const trace={x:metrics.diversity_score.map((_,index)=>index),y:metrics.diversity_score,type:'scatter',mode:'lines',name:'Skill Diversity',line:{color:'#9c27b0',width:2}};const layout={title:'Skill Diversity Over Time',xaxis:{title:'Iteration',color:'#ffffff',gridcolor:'#444'},yaxis:{title:'Diversity Score',color:'#ffffff',gridcolor:'#444'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:60},showlegend:false};return/*#__PURE__*/_jsx(Plot,{data:[trace],layout:layout,style:{width:'100%',height:'300px'},config:{displayModeBar:false,responsive:true}});};const renderTrainingTable=()=>{var _metrics$meta_loss;const recentMetrics=[];const length=Math.min(10,((_metrics$meta_loss=metrics.meta_loss)===null||_metrics$meta_loss===void 0?void 0:_metrics$meta_loss.length)||0);for(let i=length-1;i>=0;i--){var _metrics$iteration,_metrics$meta_loss2,_metrics$meta_loss3,_metrics$adaptation_l,_metrics$adaptation_l2,_metrics$success_rate,_metrics$diversity_sc,_metrics$diversity_sc2;recentMetrics.push({iteration:((_metrics$iteration=metrics.iteration)===null||_metrics$iteration===void 0?void 0:_metrics$iteration[metrics.iteration.length-1-i])||length-1-i,metaLoss:((_metrics$meta_loss2=metrics.meta_loss)===null||_metrics$meta_loss2===void 0?void 0:(_metrics$meta_loss3=_metrics$meta_loss2[metrics.meta_loss.length-1-i])===null||_metrics$meta_loss3===void 0?void 0:_metrics$meta_loss3.toFixed(4))||'N/A',adaptationLoss:((_metrics$adaptation_l=metrics.adaptation_loss)===null||_metrics$adaptation_l===void 0?void 0:(_metrics$adaptation_l2=_metrics$adaptation_l[metrics.adaptation_loss.length-1-i])===null||_metrics$adaptation_l2===void 0?void 0:_metrics$adaptation_l2.toFixed(4))||'N/A',successRate:(_metrics$success_rate=metrics.success_rate)!==null&&_metrics$success_rate!==void 0&&_metrics$success_rate[metrics.success_rate.length-1-i]?`${(metrics.success_rate[metrics.success_rate.length-1-i]*100).toFixed(1)}%`:'N/A',diversityScore:((_metrics$diversity_sc=metrics.diversity_score)===null||_metrics$diversity_sc===void 0?void 0:(_metrics$diversity_sc2=_metrics$diversity_sc[metrics.diversity_score.length-1-i])===null||_metrics$diversity_sc2===void 0?void 0:_metrics$diversity_sc2.toFixed(3))||'N/A'});}return/*#__PURE__*/_jsx(TableContainer,{component:Paper,sx:{maxHeight:400},children:/*#__PURE__*/_jsxs(Table,{stickyHeader:true,size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:\"Iteration\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Meta Loss\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Adaptation Loss\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Success Rate\"}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:\"Diversity\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:recentMetrics.map((row,index)=>/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{component:\"th\",scope:\"row\",children:row.iteration}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.metaLoss}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.adaptationLoss}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.successRate}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:row.diversityScore})]},index))})]})});};const getCurrentMetrics=()=>{var _metrics$meta_loss4,_metrics$adaptation_l3,_metrics$success_rate2,_metrics$diversity_sc3,_metrics$meta_loss5;const current={metaLoss:((_metrics$meta_loss4=metrics.meta_loss)===null||_metrics$meta_loss4===void 0?void 0:_metrics$meta_loss4[metrics.meta_loss.length-1])||0,adaptationLoss:((_metrics$adaptation_l3=metrics.adaptation_loss)===null||_metrics$adaptation_l3===void 0?void 0:_metrics$adaptation_l3[metrics.adaptation_loss.length-1])||0,successRate:(((_metrics$success_rate2=metrics.success_rate)===null||_metrics$success_rate2===void 0?void 0:_metrics$success_rate2[metrics.success_rate.length-1])||0)*100,diversityScore:((_metrics$diversity_sc3=metrics.diversity_score)===null||_metrics$diversity_sc3===void 0?void 0:_metrics$diversity_sc3[metrics.diversity_score.length-1])||0,totalIterations:((_metrics$meta_loss5=metrics.meta_loss)===null||_metrics$meta_loss5===void 0?void 0:_metrics$meta_loss5.length)||0};return current;};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"50vh\",children:/*#__PURE__*/_jsx(Typography,{children:\"Loading training metrics...\"})});}const currentMetrics=getCurrentMetrics();return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",mb:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",children:\"Training Dashboard\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",gap:2,alignItems:\"center\",children:[/*#__PURE__*/_jsx(Chip,{label:isConnected?'Connected':'Disconnected',color:isConnected?'success':'error',variant:\"outlined\",size:\"small\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:isTraining?/*#__PURE__*/_jsx(StopIcon,{}):/*#__PURE__*/_jsx(PlayIcon,{}),onClick:isTraining?handleStopTraining:handleStartTraining,color:isTraining?'error':'primary',children:isTraining?'Stop Training':'Start Training'}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",startIcon:/*#__PURE__*/_jsx(RefreshIcon,{}),onClick:fetchMetrics,children:\"Refresh\"})]})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,mb:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:renderMetricCard('Meta Loss',currentMetrics.metaLoss.toFixed(4),undefined,'primary')}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:renderMetricCard('Success Rate',`${currentMetrics.successRate.toFixed(1)}%`,undefined,'success')}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:renderMetricCard('Diversity Score',currentMetrics.diversityScore.toFixed(3),undefined,'secondary')}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:3,children:renderMetricCard('Iterations',currentMetrics.totalIterations,undefined,'info')})]}),/*#__PURE__*/_jsx(Card,{sx:{mb:3},children:/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Training Status\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",gap:2,children:[/*#__PURE__*/_jsx(Chip,{label:isTraining?'Training Active':'Training Idle',color:isTraining?'success':'default',icon:isTraining?/*#__PURE__*/_jsx(PlayIcon,{}):/*#__PURE__*/_jsx(StopIcon,{})}),lastUpdate&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Last update: \",lastUpdate.toLocaleTimeString()]})]})]})})})}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,mb:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:8,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:renderLossPlot()})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:renderSuccessRatePlot()})})})]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:4,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(CardContent,{children:renderDiversityPlot()})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:8,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Recent Training History\"}),renderTrainingTable()]})})})]})]});};export default Training;","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","Chip","Button","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TrendingUp","TrendingUpIcon","PlayArrow","PlayIcon","Stop","StopIcon","Refresh","RefreshIcon","Plot","trainingAPI","useWebSocket","jsx","_jsx","jsxs","_jsxs","Training","metrics","setMetrics","isTraining","setIsTraining","loading","setLoading","lastUpdate","setLastUpdate","lastMessage","isConnected","fetchMetrics","message","JSON","parse","type","newMetrics","data","prevMetrics","updated","Object","keys","forEach","key","typedKey","push","length","slice","Date","response","getMetrics","timestamp","error","console","handleStartTraining","handleStopTraining","renderMetricCard","title","value","trend","color","arguments","undefined","children","display","alignItems","justifyContent","gutterBottom","variant","component","sx","opacity","renderLossPlot","meta_loss","height","traces","x","map","_","index","y","mode","name","line","width","adaptation_loss","yaxis","layout","xaxis","gridcolor","yaxis2","overlaying","side","paper_bgcolor","plot_bgcolor","font","margin","t","r","b","l","legend","style","config","displayModeBar","responsive","renderSuccessRatePlot","success_rate","trace","rate","marker","size","fill","fillcolor","range","showlegend","renderDiversityPlot","diversity_score","renderTrainingTable","_metrics$meta_loss","recentMetrics","Math","min","i","_metrics$iteration","_metrics$meta_loss2","_metrics$meta_loss3","_metrics$adaptation_l","_metrics$adaptation_l2","_metrics$success_rate","_metrics$diversity_sc","_metrics$diversity_sc2","iteration","metaLoss","toFixed","adaptationLoss","successRate","diversityScore","maxHeight","stickyHeader","align","row","hover","scope","getCurrentMetrics","_metrics$meta_loss4","_metrics$adaptation_l3","_metrics$success_rate2","_metrics$diversity_sc3","_metrics$meta_loss5","current","totalIterations","currentMetrics","mb","gap","label","startIcon","onClick","container","spacing","item","xs","sm","md","icon","toLocaleTimeString","lg"],"sources":["/Users/ananthhariharan/Documents/Projects/Trevi/meta_hrl/frontend/frontend/src/pages/Training.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Chip,\n  Button,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from '@mui/material';\nimport {\n  TrendingUp as TrendingUpIcon,\n  PlayArrow as PlayIcon,\n  Stop as StopIcon,\n  Refresh as RefreshIcon,\n} from '@mui/icons-material';\nimport Plot from 'react-plotly.js';\nimport { trainingAPI } from '../utils/api';\nimport { useWebSocket } from '../utils/websocket';\n\ninterface TrainingMetrics {\n  meta_loss?: number[];\n  adaptation_loss?: number[];\n  success_rate?: number[];\n  diversity_score?: number[];\n  learning_rate?: number[];\n  iteration?: number[];\n}\n\nconst Training: React.FC = () => {\n  const [metrics, setMetrics] = useState<TrainingMetrics>({});\n  const [isTraining, setIsTraining] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n  const { lastMessage, isConnected } = useWebSocket();\n\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n\n  useEffect(() => {\n    if (lastMessage) {\n      const message = JSON.parse(lastMessage);\n      if (message.type === 'metrics_updated') {\n        const newMetrics = message.data.metrics;\n        setMetrics(prevMetrics => {\n          const updated: TrainingMetrics = { ...prevMetrics };\n          \n          // Update each metric array\n          Object.keys(newMetrics).forEach(key => {\n            const typedKey = key as keyof TrainingMetrics;\n            if (!updated[typedKey]) {\n              (updated as any)[typedKey] = [];\n            }\n            (updated as any)[typedKey].push(newMetrics[key]);\n            \n            // Keep only last 1000 points\n            if ((updated as any)[typedKey].length > 1000) {\n              (updated as any)[typedKey] = (updated as any)[typedKey].slice(-1000);\n            }\n          });\n          \n          return updated;\n        });\n        \n        setLastUpdate(new Date());\n        setIsTraining(true);\n      }\n    }\n  }, [lastMessage]);\n\n  const fetchMetrics = async () => {\n    try {\n      const response = await trainingAPI.getMetrics();\n      setMetrics(response.data.metrics);\n      setLastUpdate(new Date(response.data.timestamp));\n    } catch (error) {\n      console.error('Error fetching training metrics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStartTraining = () => {\n    // In a real implementation, this would start a training job\n    setIsTraining(true);\n  };\n\n  const handleStopTraining = () => {\n    // In a real implementation, this would stop the training job\n    setIsTraining(false);\n  };\n\n  const renderMetricCard = (title: string, value: string | number, trend?: string, color: string = 'primary') => (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Box>\n            <Typography color=\"text.secondary\" gutterBottom variant=\"overline\">\n              {title}\n            </Typography>\n            <Typography variant=\"h4\" component=\"div\" sx={{ color: `${color}.main` }}>\n              {value}\n            </Typography>\n            {trend && (\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                {trend}\n              </Typography>\n            )}\n          </Box>\n          <TrendingUpIcon sx={{ color: `${color}.main`, opacity: 0.7 }} />\n        </Box>\n      </CardContent>\n    </Card>\n  );\n\n  const renderLossPlot = () => {\n    if (!metrics.meta_loss || metrics.meta_loss.length === 0) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={300}>\n          <Typography color=\"text.secondary\">No loss data available</Typography>\n        </Box>\n      );\n    }\n\n    const traces = [];\n    \n    if (metrics.meta_loss) {\n      traces.push({\n        x: metrics.meta_loss.map((_, index) => index),\n        y: metrics.meta_loss,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Meta Loss',\n        line: { color: '#1976d2', width: 2 },\n      });\n    }\n    \n    if (metrics.adaptation_loss) {\n      traces.push({\n        x: metrics.adaptation_loss.map((_, index) => index),\n        y: metrics.adaptation_loss,\n        type: 'scatter',\n        mode: 'lines',\n        name: 'Adaptation Loss',\n        line: { color: '#dc004e', width: 2 },\n        yaxis: 'y2',\n      });\n    }\n\n    const layout = {\n      title: 'Training Loss Curves',\n      xaxis: { \n        title: 'Iteration',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: 'Meta Loss',\n        color: '#ffffff',\n        gridcolor: '#444',\n        type: 'log' as const,\n      },\n      yaxis2: {\n        title: 'Adaptation Loss',\n        overlaying: 'y',\n        side: 'right' as const,\n        color: '#ffffff',\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 60, b: 50, l: 60 },\n      legend: { x: 0, y: 1 },\n    };\n\n    return (\n      <Plot\n        data={traces}\n        layout={layout}\n        style={{ width: '100%', height: '350px' }}\n        config={{ displayModeBar: false, responsive: true }}\n      />\n    );\n  };\n\n  const renderSuccessRatePlot = () => {\n    if (!metrics.success_rate || metrics.success_rate.length === 0) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={300}>\n          <Typography color=\"text.secondary\">No success rate data available</Typography>\n        </Box>\n      );\n    }\n\n    const trace = {\n      x: metrics.success_rate.map((_, index) => index),\n      y: metrics.success_rate.map(rate => rate * 100),\n      type: 'scatter',\n      mode: 'lines+markers',\n      name: 'Success Rate',\n      line: { color: '#2e7d32', width: 3 },\n      marker: { size: 4 },\n      fill: 'tonexty',\n      fillcolor: 'rgba(46, 125, 50, 0.1)',\n    };\n\n    const layout = {\n      title: 'Success Rate Evolution',\n      xaxis: { \n        title: 'Iteration',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: 'Success Rate (%)',\n        color: '#ffffff',\n        gridcolor: '#444',\n        range: [0, 100],\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 60 },\n      showlegend: false,\n    };\n\n    return (\n      <Plot\n        data={[trace]}\n        layout={layout}\n        style={{ width: '100%', height: '300px' }}\n        config={{ displayModeBar: false, responsive: true }}\n      />\n    );\n  };\n\n  const renderDiversityPlot = () => {\n    if (!metrics.diversity_score || metrics.diversity_score.length === 0) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={300}>\n          <Typography color=\"text.secondary\">No diversity data available</Typography>\n        </Box>\n      );\n    }\n\n    const trace = {\n      x: metrics.diversity_score.map((_, index) => index),\n      y: metrics.diversity_score,\n      type: 'scatter',\n      mode: 'lines',\n      name: 'Skill Diversity',\n      line: { color: '#9c27b0', width: 2 },\n    };\n\n    const layout = {\n      title: 'Skill Diversity Over Time',\n      xaxis: { \n        title: 'Iteration',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: 'Diversity Score',\n        color: '#ffffff',\n        gridcolor: '#444',\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 60 },\n      showlegend: false,\n    };\n\n    return (\n      <Plot\n        data={[trace]}\n        layout={layout}\n        style={{ width: '100%', height: '300px' }}\n        config={{ displayModeBar: false, responsive: true }}\n      />\n    );\n  };\n\n  const renderTrainingTable = () => {\n    const recentMetrics = [];\n    const length = Math.min(10, metrics.meta_loss?.length || 0);\n    \n    for (let i = length - 1; i >= 0; i--) {\n      recentMetrics.push({\n        iteration: (metrics.iteration?.[metrics.iteration.length - 1 - i] || (length - 1 - i)),\n        metaLoss: metrics.meta_loss?.[metrics.meta_loss.length - 1 - i]?.toFixed(4) || 'N/A',\n        adaptationLoss: metrics.adaptation_loss?.[metrics.adaptation_loss.length - 1 - i]?.toFixed(4) || 'N/A',\n        successRate: metrics.success_rate?.[metrics.success_rate.length - 1 - i] ? \n          `${(metrics.success_rate[metrics.success_rate.length - 1 - i] * 100).toFixed(1)}%` : 'N/A',\n        diversityScore: metrics.diversity_score?.[metrics.diversity_score.length - 1 - i]?.toFixed(3) || 'N/A',\n      });\n    }\n\n    return (\n      <TableContainer component={Paper} sx={{ maxHeight: 400 }}>\n        <Table stickyHeader size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Iteration</TableCell>\n              <TableCell align=\"right\">Meta Loss</TableCell>\n              <TableCell align=\"right\">Adaptation Loss</TableCell>\n              <TableCell align=\"right\">Success Rate</TableCell>\n              <TableCell align=\"right\">Diversity</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {recentMetrics.map((row, index) => (\n              <TableRow key={index} hover>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.iteration}\n                </TableCell>\n                <TableCell align=\"right\">{row.metaLoss}</TableCell>\n                <TableCell align=\"right\">{row.adaptationLoss}</TableCell>\n                <TableCell align=\"right\">{row.successRate}</TableCell>\n                <TableCell align=\"right\">{row.diversityScore}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  };\n\n  const getCurrentMetrics = () => {\n    const current = {\n      metaLoss: metrics.meta_loss?.[metrics.meta_loss.length - 1] || 0,\n      adaptationLoss: metrics.adaptation_loss?.[metrics.adaptation_loss.length - 1] || 0,\n      successRate: (metrics.success_rate?.[metrics.success_rate.length - 1] || 0) * 100,\n      diversityScore: metrics.diversity_score?.[metrics.diversity_score.length - 1] || 0,\n      totalIterations: metrics.meta_loss?.length || 0,\n    };\n    return current;\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"50vh\">\n        <Typography>Loading training metrics...</Typography>\n      </Box>\n    );\n  }\n\n  const currentMetrics = getCurrentMetrics();\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Training Dashboard\n        </Typography>\n        \n        <Box display=\"flex\" gap={2} alignItems=\"center\">\n          <Chip\n            label={isConnected ? 'Connected' : 'Disconnected'}\n            color={isConnected ? 'success' : 'error'}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n          \n          <Button\n            variant=\"contained\"\n            startIcon={isTraining ? <StopIcon /> : <PlayIcon />}\n            onClick={isTraining ? handleStopTraining : handleStartTraining}\n            color={isTraining ? 'error' : 'primary'}\n          >\n            {isTraining ? 'Stop Training' : 'Start Training'}\n          </Button>\n          \n          <Button\n            variant=\"outlined\"\n            startIcon={<RefreshIcon />}\n            onClick={fetchMetrics}\n          >\n            Refresh\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Status and Key Metrics */}\n      <Grid container spacing={3} mb={3}>\n        <Grid item xs={12} sm={6} md={3}>\n          {renderMetricCard(\n            'Meta Loss',\n            currentMetrics.metaLoss.toFixed(4),\n            undefined,\n            'primary'\n          )}\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          {renderMetricCard(\n            'Success Rate',\n            `${currentMetrics.successRate.toFixed(1)}%`,\n            undefined,\n            'success'\n          )}\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          {renderMetricCard(\n            'Diversity Score',\n            currentMetrics.diversityScore.toFixed(3),\n            undefined,\n            'secondary'\n          )}\n        </Grid>\n        \n        <Grid item xs={12} sm={6} md={3}>\n          {renderMetricCard(\n            'Iterations',\n            currentMetrics.totalIterations,\n            undefined,\n            'info'\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Training Status */}\n      <Card sx={{ mb: 3 }}>\n        <CardContent>\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n            <Box>\n              <Typography variant=\"h6\" gutterBottom>\n                Training Status\n              </Typography>\n              <Box display=\"flex\" alignItems=\"center\" gap={2}>\n                <Chip\n                  label={isTraining ? 'Training Active' : 'Training Idle'}\n                  color={isTraining ? 'success' : 'default'}\n                  icon={isTraining ? <PlayIcon /> : <StopIcon />}\n                />\n                {lastUpdate && (\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Last update: {lastUpdate.toLocaleTimeString()}\n                  </Typography>\n                )}\n              </Box>\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {/* Charts */}\n      <Grid container spacing={3} mb={3}>\n        <Grid item xs={12} lg={8}>\n          <Card>\n            <CardContent>\n              {renderLossPlot()}\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid item xs={12} lg={4}>\n          <Card>\n            <CardContent>\n              {renderSuccessRatePlot()}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} lg={4}>\n          <Card>\n            <CardContent>\n              {renderDiversityPlot()}\n            </CardContent>\n          </Card>\n        </Grid>\n        \n        <Grid item xs={12} lg={8}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Recent Training History\n              </Typography>\n              {renderTrainingTable()}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Training;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}