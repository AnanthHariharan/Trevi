{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Grid,Card,CardContent,Typography,Box,Chip,LinearProgress,List,ListItem,ListItemText,Divider}from'@mui/material';import{AccountTree as HierarchyIcon,PlayArrow as PlayIcon,Pause as PauseIcon,CheckCircle as CheckIcon}from'@mui/icons-material';import Plot from'react-plotly.js';import{hierarchyAPI}from'../utils/api';import{useWebSocket}from'../utils/websocket';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HierarchicalPolicy=()=>{const[hierarchyStatus,setHierarchyStatus]=useState(null);const[loading,setLoading]=useState(true);const[goalHistory,setGoalHistory]=useState([]);const[skillHistory,setSkillHistory]=useState([]);const{lastMessage,isConnected}=useWebSocket();useEffect(()=>{fetchHierarchyStatus();const interval=setInterval(fetchHierarchyStatus,2000);// Poll every 2 seconds\nreturn()=>clearInterval(interval);},[]);useEffect(()=>{if(lastMessage){const message=JSON.parse(lastMessage);if(message.type==='hierarchy_update'){setHierarchyStatus(message.data);}}},[lastMessage]);const fetchHierarchyStatus=async()=>{try{const response=await hierarchyAPI.getStatus();setHierarchyStatus(response.data);// Update history for visualization\nif(response.data.current_goal){setGoalHistory(prev=>[...prev.slice(-49),response.data.current_goal]);}if(response.data.current_skill){setSkillHistory(prev=>[...prev.slice(-19),response.data.current_skill]);}}catch(error){console.error('Error fetching hierarchy status:',error);}finally{setLoading(false);}};const renderStatusCard=()=>/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(HierarchyIcon,{sx:{mr:1,color:'primary.main'}}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Policy Status\"})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mr:2},children:\"System Status:\"}),/*#__PURE__*/_jsx(Chip,{label:(hierarchyStatus===null||hierarchyStatus===void 0?void 0:hierarchyStatus.status)==='active'?'Active':'Inactive',color:(hierarchyStatus===null||hierarchyStatus===void 0?void 0:hierarchyStatus.status)==='active'?'success':'default',icon:(hierarchyStatus===null||hierarchyStatus===void 0?void 0:hierarchyStatus.status)==='active'?/*#__PURE__*/_jsx(PlayIcon,{}):/*#__PURE__*/_jsx(PauseIcon,{})})]}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mr:2},children:\"Connection:\"}),/*#__PURE__*/_jsx(Chip,{label:isConnected?'Connected':'Disconnected',color:isConnected?'success':'error',size:\"small\"})]}),(hierarchyStatus===null||hierarchyStatus===void 0?void 0:hierarchyStatus.timestamp)&&/*#__PURE__*/_jsxs(Typography,{variant:\"caption\",color:\"text.secondary\",children:[\"Last updated: \",new Date(hierarchyStatus.timestamp).toLocaleTimeString()]})]})});const renderCurrentGoalCard=()=>/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Current Goal\"}),hierarchyStatus!==null&&hierarchyStatus!==void 0&&hierarchyStatus.current_goal?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:\"Goal Vector (first 5 dimensions):\"}),/*#__PURE__*/_jsxs(Box,{display:\"flex\",flexWrap:\"wrap\",gap:1,children:[hierarchyStatus.current_goal.slice(0,5).map((value,index)=>/*#__PURE__*/_jsx(Chip,{label:`${index}: ${value.toFixed(3)}`,variant:\"outlined\",size:\"small\"},index)),hierarchyStatus.current_goal.length>5&&/*#__PURE__*/_jsx(Chip,{label:`+${hierarchyStatus.current_goal.length-5} more`,variant:\"outlined\",size:\"small\",color:\"secondary\"})]})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"No active goal\"})]})});const renderSkillSequenceCard=()=>/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Skill Sequence\"}),hierarchyStatus!==null&&hierarchyStatus!==void 0&&hierarchyStatus.skill_sequence&&hierarchyStatus.skill_sequence.length>0?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",mb:2,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{mr:2},children:\"Progress:\"}),/*#__PURE__*/_jsx(Box,{sx:{width:'100%',mr:1},children:/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:(hierarchyStatus.sequence_progress||0)*100,sx:{height:8,borderRadius:4}})}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[Math.round((hierarchyStatus.sequence_progress||0)*100),\"%\"]})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",gutterBottom:true,children:[\"Sequence (\",hierarchyStatus.current_skill_index+1,\" of \",hierarchyStatus.skill_sequence.length,\"):\"]}),/*#__PURE__*/_jsx(List,{dense:true,children:hierarchyStatus.skill_sequence.map((skill,index)=>/*#__PURE__*/_jsx(ListItem,{sx:{bgcolor:index===hierarchyStatus.current_skill_index?'action.selected':'transparent',borderRadius:1,mb:0.5},children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Box,{display:\"flex\",alignItems:\"center\",children:[index<hierarchyStatus.current_skill_index?/*#__PURE__*/_jsx(CheckIcon,{sx:{mr:1,color:'success.main',fontSize:16}}):index===hierarchyStatus.current_skill_index?/*#__PURE__*/_jsx(PlayIcon,{sx:{mr:1,color:'primary.main',fontSize:16}}):/*#__PURE__*/_jsx(Box,{sx:{width:16,mr:1}}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:skill})]})})},index))})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"No active skill sequence\"})]})});const renderCurrentSkillCard=()=>/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Current Skill\"}),hierarchyStatus!==null&&hierarchyStatus!==void 0&&hierarchyStatus.current_skill?/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Chip,{label:hierarchyStatus.current_skill,color:\"primary\",icon:/*#__PURE__*/_jsx(PlayIcon,{}),sx:{mb:2}}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Executing skill in sequence position \",hierarchyStatus.current_skill_index+1]})]}):/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"No skill currently executing\"})]})});const renderGoalEvolutionPlot=()=>{var _goalHistory$;if(goalHistory.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:300,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No goal history available\"})});}// Plot first 3 dimensions of goal evolution\nconst traces=[];const maxDims=Math.min(3,((_goalHistory$=goalHistory[0])===null||_goalHistory$===void 0?void 0:_goalHistory$.length)||0);for(let dim=0;dim<maxDims;dim++){traces.push({x:goalHistory.map((_,index)=>index),y:goalHistory.map(goal=>goal[dim]),type:'scatter',mode:'lines+markers',name:`Goal Dim ${dim+1}`,line:{width:2}});}const layout={title:'Goal Evolution Over Time',xaxis:{title:'Time Steps',color:'#ffffff',gridcolor:'#444'},yaxis:{title:'Goal Value',color:'#ffffff',gridcolor:'#444'},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:60},legend:{x:1,y:1}};return/*#__PURE__*/_jsx(Plot,{data:traces,layout:layout,style:{width:'100%',height:'300px'},config:{displayModeBar:false,responsive:true}});};const renderSkillTimelinePlot=()=>{if(skillHistory.length===0){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:300,children:/*#__PURE__*/_jsx(Typography,{color:\"text.secondary\",children:\"No skill execution history\"})});}// Create skill timeline visualization\nconst uniqueSkillsSet=new Set(skillHistory);const uniqueSkills=Array.from(uniqueSkillsSet);const skillToIndex={};uniqueSkills.forEach((skill,i)=>{skillToIndex[skill]=i;});const trace={x:skillHistory.map((_,index)=>index),y:skillHistory.map(skill=>skillToIndex[skill]),type:'scatter',mode:'lines+markers',line:{shape:'hv',width:3},marker:{size:8},hovertemplate:skillHistory.map((skill,index)=>`<b>Step ${index}</b><br>Skill: ${skill}<extra></extra>`),name:'Skill Execution'};const layout={title:'Skill Execution Timeline',xaxis:{title:'Time Steps',color:'#ffffff',gridcolor:'#444'},yaxis:{title:'Skills',color:'#ffffff',gridcolor:'#444',tickmode:'array',tickvals:uniqueSkills.map((_,i)=>i),ticktext:uniqueSkills},paper_bgcolor:'rgba(0,0,0,0)',plot_bgcolor:'rgba(0,0,0,0)',font:{color:'#ffffff'},margin:{t:50,r:30,b:50,l:120},showlegend:false};return/*#__PURE__*/_jsx(Plot,{data:[trace],layout:layout,style:{width:'100%',height:'300px'},config:{displayModeBar:false,responsive:true}});};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"50vh\",children:/*#__PURE__*/_jsx(Typography,{children:\"Loading hierarchical policy status...\"})});}return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Hierarchical Policy\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:3,children:renderStatusCard()}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:3,children:renderCurrentGoalCard()}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:3,children:renderCurrentSkillCard()}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,lg:3,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Performance\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",color:\"primary.main\",children:[hierarchyStatus!==null&&hierarchyStatus!==void 0&&hierarchyStatus.sequence_progress?Math.round(hierarchyStatus.sequence_progress*100):0,\"%\"]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:\"Sequence completion\"})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:renderSkillSequenceCard()}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Policy Levels\"}),/*#__PURE__*/_jsxs(List,{dense:true,children:[/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:\"High-Level Policy\",secondary:\"Goal setting and long-term planning\"}),/*#__PURE__*/_jsx(Chip,{label:\"Active\",color:hierarchyStatus!==null&&hierarchyStatus!==void 0&&hierarchyStatus.current_goal?'success':'default',size:\"small\"})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:\"Mid-Level Policy\",secondary:\"Skill selection and sequencing\"}),/*#__PURE__*/_jsx(Chip,{label:\"Active\",color:(hierarchyStatus===null||hierarchyStatus===void 0?void 0:hierarchyStatus.skill_sequence.length)>0?'success':'default',size:\"small\"})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemText,{primary:\"Low-Level Policy\",secondary:\"Primitive action execution\"}),/*#__PURE__*/_jsx(Chip,{label:\"Active\",color:hierarchyStatus!==null&&hierarchyStatus!==void 0&&hierarchyStatus.current_skill?'success':'default',size:\"small\"})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Goal Evolution\"}),renderGoalEvolutionPlot()]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,lg:6,children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Skill Execution Timeline\"}),renderSkillTimelinePlot()]})})})]})]});};export default HierarchicalPolicy;","map":{"version":3,"names":["React","useState","useEffect","Grid","Card","CardContent","Typography","Box","Chip","LinearProgress","List","ListItem","ListItemText","Divider","AccountTree","HierarchyIcon","PlayArrow","PlayIcon","Pause","PauseIcon","CheckCircle","CheckIcon","Plot","hierarchyAPI","useWebSocket","jsx","_jsx","jsxs","_jsxs","HierarchicalPolicy","hierarchyStatus","setHierarchyStatus","loading","setLoading","goalHistory","setGoalHistory","skillHistory","setSkillHistory","lastMessage","isConnected","fetchHierarchyStatus","interval","setInterval","clearInterval","message","JSON","parse","type","data","response","getStatus","current_goal","prev","slice","current_skill","error","console","renderStatusCard","children","display","alignItems","mb","sx","mr","color","variant","label","status","icon","size","timestamp","Date","toLocaleTimeString","renderCurrentGoalCard","gutterBottom","flexWrap","gap","map","value","index","toFixed","length","renderSkillSequenceCard","skill_sequence","width","sequence_progress","height","borderRadius","Math","round","current_skill_index","dense","skill","bgcolor","primary","fontSize","renderCurrentSkillCard","renderGoalEvolutionPlot","_goalHistory$","justifyContent","traces","maxDims","min","dim","push","x","_","y","goal","mode","name","line","layout","title","xaxis","gridcolor","yaxis","paper_bgcolor","plot_bgcolor","font","margin","t","r","b","l","legend","style","config","displayModeBar","responsive","renderSkillTimelinePlot","uniqueSkillsSet","Set","uniqueSkills","Array","from","skillToIndex","forEach","i","trace","shape","marker","hovertemplate","tickmode","tickvals","ticktext","showlegend","component","container","spacing","item","xs","md","lg","secondary"],"sources":["/Users/ananthhariharan/Documents/Projects/Trevi/meta_hrl/frontend/frontend/src/pages/HierarchicalPolicy.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Box,\n  Chip,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from '@mui/material';\nimport {\n  AccountTree as HierarchyIcon,\n  PlayArrow as PlayIcon,\n  Pause as PauseIcon,\n  CheckCircle as CheckIcon,\n} from '@mui/icons-material';\nimport Plot from 'react-plotly.js';\nimport { hierarchyAPI } from '../utils/api';\nimport { useWebSocket } from '../utils/websocket';\n\ninterface HierarchyStatus {\n  status: string;\n  current_goal: number[] | null;\n  skill_sequence: string[];\n  current_skill_index: number;\n  current_skill: string | null;\n  sequence_progress: number;\n  timestamp: string;\n}\n\nconst HierarchicalPolicy: React.FC = () => {\n  const [hierarchyStatus, setHierarchyStatus] = useState<HierarchyStatus | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [goalHistory, setGoalHistory] = useState<number[][]>([]);\n  const [skillHistory, setSkillHistory] = useState<string[]>([]);\n  const { lastMessage, isConnected } = useWebSocket();\n\n  useEffect(() => {\n    fetchHierarchyStatus();\n    const interval = setInterval(fetchHierarchyStatus, 2000); // Poll every 2 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (lastMessage) {\n      const message = JSON.parse(lastMessage);\n      if (message.type === 'hierarchy_update') {\n        setHierarchyStatus(message.data);\n      }\n    }\n  }, [lastMessage]);\n\n  const fetchHierarchyStatus = async () => {\n    try {\n      const response = await hierarchyAPI.getStatus();\n      setHierarchyStatus(response.data);\n      \n      // Update history for visualization\n      if (response.data.current_goal) {\n        setGoalHistory(prev => [...prev.slice(-49), response.data.current_goal]);\n      }\n      if (response.data.current_skill) {\n        setSkillHistory(prev => [...prev.slice(-19), response.data.current_skill]);\n      }\n    } catch (error) {\n      console.error('Error fetching hierarchy status:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderStatusCard = () => (\n    <Card>\n      <CardContent>\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <HierarchyIcon sx={{ mr: 1, color: 'primary.main' }} />\n          <Typography variant=\"h6\">Policy Status</Typography>\n        </Box>\n        \n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"body2\" sx={{ mr: 2 }}>\n            System Status:\n          </Typography>\n          <Chip\n            label={hierarchyStatus?.status === 'active' ? 'Active' : 'Inactive'}\n            color={hierarchyStatus?.status === 'active' ? 'success' : 'default'}\n            icon={hierarchyStatus?.status === 'active' ? <PlayIcon /> : <PauseIcon />}\n          />\n        </Box>\n\n        <Box display=\"flex\" alignItems=\"center\" mb={2}>\n          <Typography variant=\"body2\" sx={{ mr: 2 }}>\n            Connection:\n          </Typography>\n          <Chip\n            label={isConnected ? 'Connected' : 'Disconnected'}\n            color={isConnected ? 'success' : 'error'}\n            size=\"small\"\n          />\n        </Box>\n\n        {hierarchyStatus?.timestamp && (\n          <Typography variant=\"caption\" color=\"text.secondary\">\n            Last updated: {new Date(hierarchyStatus.timestamp).toLocaleTimeString()}\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const renderCurrentGoalCard = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Current Goal\n        </Typography>\n        \n        {hierarchyStatus?.current_goal ? (\n          <Box>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Goal Vector (first 5 dimensions):\n            </Typography>\n            <Box display=\"flex\" flexWrap=\"wrap\" gap={1}>\n              {hierarchyStatus.current_goal.slice(0, 5).map((value, index) => (\n                <Chip\n                  key={index}\n                  label={`${index}: ${value.toFixed(3)}`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n              ))}\n              {hierarchyStatus.current_goal.length > 5 && (\n                <Chip\n                  label={`+${hierarchyStatus.current_goal.length - 5} more`}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  color=\"secondary\"\n                />\n              )}\n            </Box>\n          </Box>\n        ) : (\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            No active goal\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const renderSkillSequenceCard = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Skill Sequence\n        </Typography>\n        \n        {hierarchyStatus?.skill_sequence && hierarchyStatus.skill_sequence.length > 0 ? (\n          <Box>\n            <Box display=\"flex\" alignItems=\"center\" mb={2}>\n              <Typography variant=\"body2\" sx={{ mr: 2 }}>\n                Progress:\n              </Typography>\n              <Box sx={{ width: '100%', mr: 1 }}>\n                <LinearProgress\n                  variant=\"determinate\"\n                  value={(hierarchyStatus.sequence_progress || 0) * 100}\n                  sx={{ height: 8, borderRadius: 4 }}\n                />\n              </Box>\n              <Typography variant=\"body2\">\n                {Math.round((hierarchyStatus.sequence_progress || 0) * 100)}%\n              </Typography>\n            </Box>\n\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              Sequence ({hierarchyStatus.current_skill_index + 1} of {hierarchyStatus.skill_sequence.length}):\n            </Typography>\n            \n            <List dense>\n              {hierarchyStatus.skill_sequence.map((skill, index) => (\n                <ListItem\n                  key={index}\n                  sx={{\n                    bgcolor: index === hierarchyStatus.current_skill_index ? 'action.selected' : 'transparent',\n                    borderRadius: 1,\n                    mb: 0.5,\n                  }}\n                >\n                  <ListItemText\n                    primary={\n                      <Box display=\"flex\" alignItems=\"center\">\n                        {index < hierarchyStatus.current_skill_index ? (\n                          <CheckIcon sx={{ mr: 1, color: 'success.main', fontSize: 16 }} />\n                        ) : index === hierarchyStatus.current_skill_index ? (\n                          <PlayIcon sx={{ mr: 1, color: 'primary.main', fontSize: 16 }} />\n                        ) : (\n                          <Box sx={{ width: 16, mr: 1 }} />\n                        )}\n                        <Typography variant=\"body2\">\n                          {skill}\n                        </Typography>\n                      </Box>\n                    }\n                  />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n        ) : (\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            No active skill sequence\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const renderCurrentSkillCard = () => (\n    <Card>\n      <CardContent>\n        <Typography variant=\"h6\" gutterBottom>\n          Current Skill\n        </Typography>\n        \n        {hierarchyStatus?.current_skill ? (\n          <Box>\n            <Chip\n              label={hierarchyStatus.current_skill}\n              color=\"primary\"\n              icon={<PlayIcon />}\n              sx={{ mb: 2 }}\n            />\n            \n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Executing skill in sequence position {hierarchyStatus.current_skill_index + 1}\n            </Typography>\n          </Box>\n        ) : (\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            No skill currently executing\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n\n  const renderGoalEvolutionPlot = () => {\n    if (goalHistory.length === 0) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={300}>\n          <Typography color=\"text.secondary\">No goal history available</Typography>\n        </Box>\n      );\n    }\n\n    // Plot first 3 dimensions of goal evolution\n    const traces = [];\n    const maxDims = Math.min(3, goalHistory[0]?.length || 0);\n    \n    for (let dim = 0; dim < maxDims; dim++) {\n      traces.push({\n        x: goalHistory.map((_, index) => index),\n        y: goalHistory.map(goal => goal[dim]),\n        type: 'scatter',\n        mode: 'lines+markers',\n        name: `Goal Dim ${dim + 1}`,\n        line: { width: 2 },\n      });\n    }\n\n    const layout = {\n      title: 'Goal Evolution Over Time',\n      xaxis: { \n        title: 'Time Steps',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: 'Goal Value',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 60 },\n      legend: { x: 1, y: 1 },\n    };\n\n    return (\n      <Plot\n        data={traces}\n        layout={layout}\n        style={{ width: '100%', height: '300px' }}\n        config={{ displayModeBar: false, responsive: true }}\n      />\n    );\n  };\n\n  const renderSkillTimelinePlot = () => {\n    if (skillHistory.length === 0) {\n      return (\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height={300}>\n          <Typography color=\"text.secondary\">No skill execution history</Typography>\n        </Box>\n      );\n    }\n\n    // Create skill timeline visualization\n    const uniqueSkillsSet = new Set(skillHistory);\n    const uniqueSkills = Array.from(uniqueSkillsSet);\n    const skillToIndex: {[key: string]: number} = {};\n    uniqueSkills.forEach((skill, i) => {\n      skillToIndex[skill] = i;\n    });\n\n    const trace = {\n      x: skillHistory.map((_, index) => index),\n      y: skillHistory.map(skill => skillToIndex[skill]),\n      type: 'scatter',\n      mode: 'lines+markers',\n      line: { shape: 'hv', width: 3 },\n      marker: { size: 8 },\n      hovertemplate: skillHistory.map((skill, index) => \n        `<b>Step ${index}</b><br>Skill: ${skill}<extra></extra>`\n      ),\n      name: 'Skill Execution',\n    };\n\n    const layout = {\n      title: 'Skill Execution Timeline',\n      xaxis: { \n        title: 'Time Steps',\n        color: '#ffffff',\n        gridcolor: '#444'\n      },\n      yaxis: { \n        title: 'Skills',\n        color: '#ffffff',\n        gridcolor: '#444',\n        tickmode: 'array',\n        tickvals: uniqueSkills.map((_, i) => i),\n        ticktext: uniqueSkills,\n      },\n      paper_bgcolor: 'rgba(0,0,0,0)',\n      plot_bgcolor: 'rgba(0,0,0,0)',\n      font: { color: '#ffffff' },\n      margin: { t: 50, r: 30, b: 50, l: 120 },\n      showlegend: false,\n    };\n\n    return (\n      <Plot\n        data={[trace]}\n        layout={layout}\n        style={{ width: '100%', height: '300px' }}\n        config={{ displayModeBar: false, responsive: true }}\n      />\n    );\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"50vh\">\n        <Typography>Loading hierarchical policy status...</Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Hierarchical Policy\n      </Typography>\n\n      <Grid container spacing={3}>\n        {/* Status Cards */}\n        <Grid item xs={12} md={6} lg={3}>\n          {renderStatusCard()}\n        </Grid>\n        \n        <Grid item xs={12} md={6} lg={3}>\n          {renderCurrentGoalCard()}\n        </Grid>\n        \n        <Grid item xs={12} md={6} lg={3}>\n          {renderCurrentSkillCard()}\n        </Grid>\n        \n        <Grid item xs={12} md={6} lg={3}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Performance\n              </Typography>\n              <Typography variant=\"h4\" color=\"primary.main\">\n                {hierarchyStatus?.sequence_progress ? \n                  Math.round(hierarchyStatus.sequence_progress * 100) : 0}%\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Sequence completion\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Skill Sequence Details */}\n        <Grid item xs={12} lg={6}>\n          {renderSkillSequenceCard()}\n        </Grid>\n\n        {/* Policy Levels */}\n        <Grid item xs={12} lg={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Policy Levels\n              </Typography>\n              \n              <List dense>\n                <ListItem>\n                  <ListItemText\n                    primary=\"High-Level Policy\"\n                    secondary=\"Goal setting and long-term planning\"\n                  />\n                  <Chip \n                    label=\"Active\" \n                    color={hierarchyStatus?.current_goal ? 'success' : 'default'} \n                    size=\"small\" \n                  />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                  <ListItemText\n                    primary=\"Mid-Level Policy\"\n                    secondary=\"Skill selection and sequencing\"\n                  />\n                  <Chip \n                    label=\"Active\" \n                    color={hierarchyStatus?.skill_sequence.length > 0 ? 'success' : 'default'} \n                    size=\"small\" \n                  />\n                </ListItem>\n                <Divider />\n                <ListItem>\n                  <ListItemText\n                    primary=\"Low-Level Policy\"\n                    secondary=\"Primitive action execution\"\n                  />\n                  <Chip \n                    label=\"Active\" \n                    color={hierarchyStatus?.current_skill ? 'success' : 'default'} \n                    size=\"small\" \n                  />\n                </ListItem>\n              </List>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Visualization Charts */}\n        <Grid item xs={12} lg={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Goal Evolution\n              </Typography>\n              {renderGoalEvolutionPlot()}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} lg={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Skill Execution Timeline\n              </Typography>\n              {renderSkillTimelinePlot()}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default HierarchicalPolicy;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}